% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/chat.R
\name{chat_append_message}
\alias{chat_append_message}
\title{Low-level function to append a message to a chat control}
\usage{
chat_append_message(
  id,
  msg,
  chunk = FALSE,
  operation = NULL,
  session = getDefaultReactiveDomain()
)
}
\arguments{
\item{id}{The ID of the chat element}

\item{msg}{The message to append. Should be a named list with \code{role} and
\code{content} fields. The \code{role} field should be either "user" or "assistant".
The \code{content} field should be a string containing the message content, in
Markdown format.}

\item{chunk}{Whether \code{msg} is just a chunk of a message, and if so, what
type. If \code{FALSE}, then \code{msg} is a complete message. If \code{"start"}, then
\code{msg} is the first chunk of a multi-chunk message. If \code{"end"}, then \code{msg}
is the last chunk of a multi-chunk message. If \code{TRUE}, then \code{msg} is an
intermediate chunk of a multi-chunk message. Default is \code{FALSE}.}

\item{operation}{The operation to perform on the message. If \code{NULL}, then
\code{msg} replaces the latest message. If \code{"append"}, then \code{msg} is appended
to the latest message. Default is \code{NULL}.}

\item{session}{The Shiny session object}
}
\value{
Returns nothing of consequence.
}
\description{
For advanced users who want to control the message chunking behavior. Most
users should use \code{\link[=chat_append]{chat_append()}} instead.
}
